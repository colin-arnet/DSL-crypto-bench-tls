{
    "schema": "vitis_libraries_api_list_schema-1.0",
    "api_list": [
        {
            "api_name": "xf::graph::L3::louvainModularity",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::graph::L3::louvainModularity",
                "display_name": "louvainModularity",
                "brief": "louvain algorithm is implemented.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "std::shared_ptr< xf::graph::L3::Handle >"
                    },
                    {
                        "name": "flowMode",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "glv",
                        "direction": "",
                        "type": "GLV *"
                    },
                    {
                        "name": "pglv",
                        "direction": "",
                        "type": "LouvainPara *para_lv"
                    },
                    {
                        "name": "para_lv",
                        "direction": "",
                        "type": "LouvainPara *"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::twoHop",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::twoHop",
                "display_name": "twoHop",
                "brief": "twoHop algorithm is implemented.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "numPart",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "pairPart",
                        "direction": "",
                        "type": "uint64_t **"
                    },
                    {
                        "name": "resPart",
                        "direction": "",
                        "type": "uint32_t **"
                    },
                    {
                        "name": "g",
                        "direction": "",
                        "type": "xf::"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::pageRankWeight",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::pageRankWeight",
                "display_name": "pageRankWeight",
                "brief": "pageRank algorithm is implemented.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "alpha",
                        "direction": "",
                        "type": "float"
                    },
                    {
                        "name": "tolerance",
                        "direction": "",
                        "type": "float"
                    },
                    {
                        "name": "maxIter",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "pagerank",
                        "direction": "",
                        "type": "float *"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::shortestPath",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::shortestPath",
                "display_name": "shortestPath",
                "brief": "The single source shortest path algorithm is implemented, the input is the matrix in CSR format.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "nSource",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "sourceID",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "weighted",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "result",
                        "direction": "",
                        "type": "float **"
                    },
                    {
                        "name": "predecent",
                        "direction": "",
                        "type": "uint32_t **"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::cosineSimilaritySSSparse",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::cosineSimilaritySSSparse",
                "display_name": "cosineSimilaritySSSparse",
                "brief": "The single source cosine similarity API for sparse graph.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "sourceNUM",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "sourceIndices",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "sourceWeights",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "resultID",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "similarity",
                        "direction": "",
                        "type": "float *"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::jaccardSimilaritySSSparse",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::jaccardSimilaritySSSparse",
                "display_name": "jaccardSimilaritySSSparse",
                "brief": "The single source jaccard similarity API for sparse graph.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "sourceNUM",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "sourceIndices",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "sourceWeights",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "resultID",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "similarity",
                        "direction": "",
                        "type": "float *"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::cosineSimilarityAPSparse",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::cosineSimilarityAPSparse",
                "display_name": "cosineSimilarityAPSparse",
                "brief": "The all-pairs cosine similarity API for sparse graph.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "resultID",
                        "direction": "",
                        "type": "uint32_t **"
                    },
                    {
                        "name": "similarity",
                        "direction": "",
                        "type": "float **"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::jaccardSimilarityAPSparse",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::jaccardSimilarityAPSparse",
                "display_name": "jaccardSimilarityAPSparse",
                "brief": "The all-pairs jaccard similarity API for sparse graph.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "resultID",
                        "direction": "",
                        "type": "uint32_t **"
                    },
                    {
                        "name": "similarity",
                        "direction": "",
                        "type": "float **"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::cosineSimilaritySSDense",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::cosineSimilaritySSDense",
                "display_name": "cosineSimilaritySSDense",
                "brief": "The single source cosine similarity API for dense graph.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "sourceNUM",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "sourceWeights",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "resultID",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "similarity",
                        "direction": "",
                        "type": "float *"
                    }
                ]
            }
        },
        {
            "api_name": "xf::graph::L3::cosineSimilaritySSDenseMultiCardBlocking",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::graph::L3::cosineSimilaritySSDenseMultiCardBlocking",
                "display_name": "cosineSimilaritySSDenseMultiCardBlocking",
                "brief": "The Multi-cards' single source cosine similarity API for dense graph.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "deviceNm",
                        "direction": "",
                        "type": "int32_t"
                    },
                    {
                        "name": "sourceNUM",
                        "direction": "",
                        "type": "int32_t"
                    },
                    {
                        "name": "sourceWeights",
                        "direction": "",
                        "type": "int32_t *"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "int32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "resultID",
                        "direction": "",
                        "type": "int32_t *"
                    },
                    {
                        "name": "similarity",
                        "direction": "",
                        "type": "float *"
                    }
                ]
            }
        },
        {
            "api_name": "std::vector<event<int> > xf::graph::L3::cosineSimilaritySSDenseMultiCard",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "std::vector<event<int> > xf::graph::L3::cosineSimilaritySSDenseMultiCard",
                "display_name": "cosineSimilaritySSDenseMultiCard",
                "brief": "The Non-blocking Multi-cards' single source cosine similarity API for dense graph.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "deviceNm",
                        "direction": "",
                        "type": "int32_t"
                    },
                    {
                        "name": "sourceNUM",
                        "direction": "",
                        "type": "int32_t"
                    },
                    {
                        "name": "sourceWeights",
                        "direction": "",
                        "type": "int32_t *"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "int32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::aph::Graph< int32_t,"
                    },
                    {
                        "name": "resultID",
                        "direction": "",
                        "type": "int32_t > **g, int32_t **"
                    },
                    {
                        "name": "similarity",
                        "direction": "",
                        "type": "float **similarit"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::jaccardSimilaritySSDense",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::jaccardSimilaritySSDense",
                "display_name": "jaccardSimilaritySSDense",
                "brief": "The single source jaccard similarity API for dense graph.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "sourceNUM",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "sourceWeights",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "resultID",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "similarity",
                        "direction": "",
                        "type": "float *"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::cosineSimilarityAPDense",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::cosineSimilarityAPDense",
                "display_name": "cosineSimilarityAPDense",
                "brief": "The all-pairs cosine similarity API for dense graph.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "resultID",
                        "direction": "",
                        "type": "uint32_t **"
                    },
                    {
                        "name": "similarity",
                        "direction": "",
                        "type": "float **"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::jaccardSimilarityAPDense",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::jaccardSimilarityAPDense",
                "display_name": "jaccardSimilarityAPDense",
                "brief": "The all-pairs jaccard similarity API for dense graph.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "resultID",
                        "direction": "",
                        "type": "uint32_t **"
                    },
                    {
                        "name": "similarity",
                        "direction": "",
                        "type": "float **"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::knnSimilaritySSSparse",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::knnSimilaritySSSparse",
                "display_name": "knnSimilaritySSSparse",
                "brief": "The single source k-nearest neighbors API for sparse graph. knnSimilarity API is based on the cosine similarity algorithm.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "sourceNUM",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "sourceIndices",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "sourceWeights",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "knownLabels",
                        "direction": "",
                        "type": "std::string *"
                    },
                    {
                        "name": "label",
                        "direction": "",
                        "type": "std::string &"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::knnSimilarinyAPSparse",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::knnSimilarinyAPSparse",
                "display_name": "knnSimilarinyAPSparse",
                "brief": "The all-pairs k-nearest neighbors API for sparse graph. knnSimilarity API is based on the cosine similarity algorithm.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "knownLabels",
                        "direction": "",
                        "type": "std::string *"
                    },
                    {
                        "name": "label",
                        "direction": "",
                        "type": "std::string *"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::knnSimilaritySSDense",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::knnSimilaritySSDense",
                "display_name": "knnSimilaritySSDense",
                "brief": "The single source k-nearest neighbors API for dense graph. knnSimilarity API is based on the cosine similarity algorithm.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "sourceNUM",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "sourceWeights",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "knownLabels",
                        "direction": "",
                        "type": "std::string *"
                    },
                    {
                        "name": "label",
                        "direction": "",
                        "type": "std::string &"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::knnSimilarityAPDense",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::knnSimilarityAPDense",
                "display_name": "knnSimilarityAPDense",
                "brief": "The all-pairs k-nearest neighbors API for dense graph. knnSimilarity API is based on the cosine similarity algorithm.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "knownLabels",
                        "direction": "",
                        "type": "std::string *"
                    },
                    {
                        "name": "label",
                        "direction": "",
                        "type": "std::string *"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::knnSimilarityAPSparse",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::knnSimilarityAPSparse",
                "display_name": "knnSimilarityAPSparse",
                "brief": "The all-pairs k-nearest neighbors API for sparse graph. knnSimilarity API is based on the cosine similarity algorithm.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "topK",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "knownLabels",
                        "direction": "",
                        "type": "std::string *"
                    },
                    {
                        "name": "label",
                        "direction": "",
                        "type": "std::string *"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::triangleCount",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::triangleCount",
                "display_name": "triangleCount",
                "brief": "triangleCount the triangle counting algorithm is implemented, the input is the matrix in CSC format.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "nTriangle",
                        "direction": "",
                        "type": "uint64_t &"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::labelPropagation",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::labelPropagation",
                "display_name": "labelPropagation",
                "brief": "labelPropagation the label propagation algorithm is implemented",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "maxIter",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "labels",
                        "direction": "",
                        "type": "uint32_t *"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::bfs",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::bfs",
                "display_name": "bfs",
                "brief": "bfs Implements the directed graph traversal by breath-first search algorithm",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "sourceID",
                        "direction": "",
                        "type": "uint32_t"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "predecent",
                        "direction": "",
                        "type": "uint32_t *"
                    },
                    {
                        "name": "distance",
                        "direction": "",
                        "type": "uint32_t *"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::wcc",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::wcc",
                "display_name": "wcc",
                "brief": "connectedComponents Computes the connected component membership of each vertex only for undirected graph",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "result",
                        "direction": "",
                        "type": "uint32_t *"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::scc",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::scc",
                "display_name": "scc",
                "brief": "stronglyConnectedComponents Computes the strongly connected component membership of each vertex only for directed graph, and label each vertex with one value containing the lowest vertex id in the SCC containing that vertex.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "gr",
                        "direction": "",
                        "type": "xf::"
                    },
                    {
                        "name": "result",
                        "direction": "",
                        "type": "uint32_t *"
                    }
                ]
            }
        },
        {
            "api_name": "event<int> xf::graph::L3::convertCsrCsc",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "event<int> xf::graph::L3::convertCsrCsc",
                "display_name": "convertCsrCsc",
                "brief": "Convert from CSR to CSC, now it supports only CSR to CSC of unweighted graph.",
                "target_domain": "",
                "header_file_name": [
                    "xf_graph_L3.hpp"
                ],
                "search_paths": [
                    "L3/include"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "handle",
                        "direction": "",
                        "type": "xf::graph::L3::Handle &"
                    },
                    {
                        "name": "gr1",
                        "direction": "",
                        "type": "xf::graph::Graph< uint32_t, uint32_t >"
                    },
                    {
                        "name": "gr2",
                        "direction": "",
                        "type": "xf::graph::Graph< uint32_t, uint32_t >"
                    }
                ]
            }
        }
    ],
    "target_domain": ""
}
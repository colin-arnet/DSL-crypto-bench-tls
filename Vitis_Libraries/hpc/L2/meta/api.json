{
    "schema": "vitis_libraries_api_list_schema-1.0",
    "api_list": [
        {
            "api_name": "krnl_control",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "krnl_control",
                "display_name": "krnl_control",
                "brief": "krnl_control kernel function to load instructions and control the cg solver",
                "target_domain": "",
                "header_file_name": [
                    "krnl_control.hpp"
                ],
                "search_paths": [
                    "L2/include/hw/cgSolver"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "p_instr",
                        "direction": "",
                        "type": "CG_interface *"
                    }
                ]
            }
        },
        {
            "api_name": "krnl_duplicate",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "krnl_duplicate",
                "display_name": "krnl_duplicate",
                "brief": "krnl_duplicate kernel function to compute A * p",
                "target_domain": "",
                "header_file_name": [
                    "krnl_duplicate.hpp"
                ],
                "search_paths": [
                    "L2/include/hw/cgSolver"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "p_A",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &p_tokenIn, hls::stream< ap_uint< CG_tkStrWidth > > &p_tokenX, hls::stream< ap_uint< CG_tkStrWidth > > &p_tokenRhls::stream< ap_uint< CG_tkStrWidth > > &p_tokenIn,"
                    },
                    {
                        "name": "p_pk",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &p_tokenX, hls::stream< ap_uint< CG_tkStrWidth > > &p_token"
                    },
                    {
                        "name": "p_Apk",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &p_tokenX, hls::stream< ap_uint< CG_tkStrWidth > > &p_token"
                    },
                    {
                        "name": "p_tokenIn",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &p_tokenX, hls::stream< ap_uint< CG_tkStrWidth > > &p_token"
                    },
                    {
                        "name": "p_tokenOut",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &p_tokenX, hls::stream< ap_uint< CG_tkStrWidth > > &p_token"
                    }
                ]
            }
        },
        {
            "api_name": "krnl_gemv",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "krnl_gemv",
                "display_name": "krnl_gemv",
                "brief": "krnl_gemv kernel function to compute A * p",
                "target_domain": "",
                "header_file_name": [
                    "krnl_gemv.hpp"
                ],
                "search_paths": [
                    "L2/include/hw/cgSolver"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "p_A",
                        "direction": "",
                        "type": "CG_interface *pk,"
                    },
                    {
                        "name": "p_pk",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &p_tokenInA, hls::stream< ap_uint< CG_tkStrWidth > > &p_tokenOu"
                    },
                    {
                        "name": "p_Apk",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &p_tokenInA, hls::stream< ap_uint< CG_tkStrWidth > > &p_tokenOu"
                    },
                    {
                        "name": "p_tokenIn",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &A,"
                    },
                    {
                        "name": "p_tokenOut",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &p_tokenO"
                    }
                ]
            }
        },
        {
            "api_name": "krnl_timer",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "krnl_timer",
                "display_name": "krnl_timer",
                "brief": "krnl_timer kernel function to count clock cycles",
                "target_domain": "",
                "header_file_name": [
                    "krnl_timer.hpp"
                ],
                "search_paths": [
                    "L2/include/hw/cgSolver"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "p_signal",
                        "direction": "",
                        "type": "hls::stream< xf::hpc::Signal_t > &"
                    },
                    {
                        "name": "p_clock",
                        "direction": "",
                        "type": "hls::stream< xf::hpc::Clock_t > &"
                    }
                ]
            }
        },
        {
            "api_name": "krnl_update_pk",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "krnl_update_pk",
                "display_name": "krnl_update_pk",
                "brief": "krnl_update_pk kernel function to update vector pk",
                "target_domain": "",
                "header_file_name": [
                    "krnl_update_pk.hpp"
                ],
                "search_paths": [
                    "L2/include/hw/cgSolver"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "p_rk",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_pk_in",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_pk_out",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_tokenIn",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &"
                    },
                    {
                        "name": "p_tokenOut",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &"
                    }
                ]
            }
        },
        {
            "api_name": "krnl_update_rk",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "krnl_update_rk",
                "display_name": "krnl_update_rk",
                "brief": "krnl_update_xr kernel function to update the vector xk and rk",
                "target_domain": "",
                "header_file_name": [
                    "krnl_update_rk.hpp"
                ],
                "search_paths": [
                    "L2/include/hw/cgSolver"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "p_rk_in",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_rk_out",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_Apk",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_tokenIn",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &"
                    },
                    {
                        "name": "p_tokenOut",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &"
                    }
                ]
            }
        },
        {
            "api_name": "krnl_update_rk_jacobi",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "krnl_update_rk_jacobi",
                "display_name": "krnl_update_rk_jacobi",
                "brief": "krnl_update_xr kernel function to update the vector xk and rk",
                "target_domain": "",
                "header_file_name": [
                    "krnl_update_rk_jacobi.hpp"
                ],
                "search_paths": [
                    "L2/include/hw/cgSolver"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "p_rk_in",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_rk_out",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_Apk",
                        "direction": "",
                        "type": "CG_interface *p_zk, CG_interface *p_jacobi, CG_interface *"
                    },
                    {
                        "name": "p_tokenIn",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &"
                    },
                    {
                        "name": "p_tokenOut",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &"
                    }
                ]
            }
        },
        {
            "api_name": "krnl_update_xr",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "krnl_update_xr",
                "display_name": "krnl_update_xr",
                "brief": "krnl_update_xr kernel function to update the vector xk and rk",
                "target_domain": "",
                "header_file_name": [
                    "krnl_update_xr.hpp"
                ],
                "search_paths": [
                    "L2/include/hw/cgSolver"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "p_xk_in",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_xk_out",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_rk_in",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_rk_out",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_pk",
                        "direction": "",
                        "type": "CG_interface *"
                    },
                    {
                        "name": "p_tokenIn",
                        "direction": "",
                        "type": "CG_interface *p_Apk, hls::stream< ap_uint< CG_tkStrWidth > > &"
                    },
                    {
                        "name": "p_tokenOut",
                        "direction": "",
                        "type": "hls::stream< ap_uint< CG_tkStrWidth > > &"
                    }
                ]
            }
        },
        {
            "api_name": "fcnKernel",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "fcnKernel",
                "display_name": "fcnKernel",
                "brief": "fcnKernel defines the kernel top function, with DDR/HBM as an interface",
                "target_domain": "",
                "header_file_name": [
                    "fcnKernel.hpp"
                ],
                "search_paths": [
                    "L2/include/hw/mlp"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "p_DdrRd",
                        "direction": "",
                        "type": "DdrIntType *"
                    },
                    {
                        "name": "p_DdrWr",
                        "direction": "",
                        "type": "DdrIntType *"
                    }
                ]
            }
        },
        {
            "api_name": "backward",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "backward",
                "display_name": "backward",
                "brief": "",
                "target_domain": "",
                "header_file_name": [
                    "rtmbackward.hpp"
                ],
                "search_paths": [
                    "L2/include/hw/rtm2d"
                ],
                "instance": "function",
                "parameters": [],
                "ports": []
            }
        },
        {
            "api_name": "rtmbackward",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "rtmbackward",
                "display_name": "rtmbackward",
                "brief": "rfmbackward kernel function",
                "target_domain": "",
                "header_file_name": [
                    "rtmbackward.hpp"
                ],
                "search_paths": [
                    "L2/include/hw/rtm2d"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "p_z",
                        "direction": "",
                        "type": "const unsigned int"
                    },
                    {
                        "name": "p_x",
                        "direction": "",
                        "type": "const unsigned int"
                    },
                    {
                        "name": "p_t",
                        "direction": "",
                        "type": "const unsigned intaperx,"
                    },
                    {
                        "name": "p_recz",
                        "direction": "",
                        "type": "const RTM_interface *p_v2dt2, RTM_interface *p_p0, RTM_interface *p_p1, RTM_interface *p_r0, RTM_interface *p_r1, RTM_interface *p_i0, RTM_interface *p_i1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_rec",
                        "direction": "",
                        "type": "const RTM_interface *p_v2dt2, RTM_interface *p_p0, RTM_interface *p_p1, RTM_interface *p_r0, RTM_interface *p_r1, RTM_interface *p_i0, RTM_interface *p_i1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_coefz",
                        "direction": "",
                        "type": "const RTM_interface *p_v2dt2, RTM_interface *p_p0, RTM_interface *p_p1, RTM_interface *p_r0, RTM_interface *p_r1, RTM_interface *p_i0, RTM_interface *p_i1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_coefx",
                        "direction": "",
                        "type": "const RTM_interface *p_v2dt2, RTM_interface *p_p0, RTM_interface *p_p1, RTM_interface *p_r0, RTM_interface *p_r1, RTM_interface *p_i0, RTM_interface *p_i1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_taperz",
                        "direction": "",
                        "type": "const RTM_interface *p_v2dt2, RTM_interface *p_p0, RTM_interface *p_p1, RTM_interface *p_r0, RTM_interface *p_r1, RTM_interface *p_i0, RTM_interface *p_i1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_taperx",
                        "direction": "",
                        "type": "const RTM_interface *p_v2dt2, RTM_interface *p_p0, RTM_interface *p_p1, RTM_interface *p_r0, RTM_interface *p_r1, RTM_interface *p_i0, RTM_interface *p_i1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_v2dt2",
                        "direction": "",
                        "type": "const RTM_interface *"
                    },
                    {
                        "name": "p_upb",
                        "direction": "",
                        "type": "RTM_interface *p_p0, RTM_interface *p_p1, RTM_interface *p_r0, RTM_interface *p_r1, RTM_interface *p_i0, RTM_interface *p_i1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_p0",
                        "direction": "",
                        "type": "RTM_interface *"
                    },
                    {
                        "name": "p_p1",
                        "direction": "",
                        "type": "RTM_interface *"
                    },
                    {
                        "name": "p_r0",
                        "direction": "",
                        "type": "RTM_interface *"
                    },
                    {
                        "name": "p_r1",
                        "direction": "",
                        "type": "RTM_interface *"
                    },
                    {
                        "name": "p_i0",
                        "direction": "",
                        "type": "RTM_interface *"
                    },
                    {
                        "name": "p_i1",
                        "direction": "",
                        "type": "RTM_interface *"
                    }
                ]
            }
        },
        {
            "api_name": "rtmforward",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "rtmforward",
                "display_name": "rtmforward",
                "brief": "rfmforward kernel function",
                "target_domain": "",
                "header_file_name": [
                    "rtmforward_hbc.hpp"
                ],
                "search_paths": [
                    "L2/include/hw/rtm3d"
                ],
                "instance": "function",
                "parameters": [],
                "ports": [
                    {
                        "name": "p_z",
                        "direction": "",
                        "type": "const unsigned int"
                    },
                    {
                        "name": "p_y",
                        "direction": "",
                        "type": "const unsigned int"
                    },
                    {
                        "name": "p_x",
                        "direction": "",
                        "type": "const unsigned int"
                    },
                    {
                        "name": "p_t",
                        "direction": "",
                        "type": "const unsigned intaperx,"
                    },
                    {
                        "name": "p_srcz",
                        "direction": "",
                        "type": "const RTM_type *p_v2dt2, RTM_type *p_pi0, RTM_type *p_pi1, RTM_type *p_po0, RTM_type *p_po1, RTM_type *p_ppi0, RTM_type *p_ppi1, RTM_type *p_ppo0, RTM_type *p_ppo1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_srcy",
                        "direction": "",
                        "type": "const RTM_type *p_v2dt2, RTM_type *p_pi0, RTM_type *p_pi1, RTM_type *p_po0, RTM_type *p_po1, RTM_type *p_ppi0, RTM_type *p_ppi1, RTM_type *p_ppo0, RTM_type *p_ppo1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_srcx",
                        "direction": "",
                        "type": "const RTM_type *p_v2dt2, RTM_type *p_pi0, RTM_type *p_pi1, RTM_type *p_po0, RTM_type *p_po1, RTM_type *p_ppi0, RTM_type *p_ppi1, RTM_type *p_ppo0, RTM_type *p_ppo1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_src",
                        "direction": "",
                        "type": "const RTM_type *p_v2dt2, RTM_type *p_pi0, RTM_type *p_pi1, RTM_type *p_po0, RTM_type *p_po1, RTM_type *p_ppi0, RTM_type *p_ppi1, RTM_type *p_ppo0, RTM_type *p_ppo1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_coefz",
                        "direction": "",
                        "type": "const RTM_type *p_v2dt2, RTM_type *p_pi0, RTM_type *p_pi1, RTM_type *p_po0, RTM_type *p_po1, RTM_type *p_ppi0, RTM_type *p_ppi1, RTM_type *p_ppo0, RTM_type *p_ppo1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_coefy",
                        "direction": "",
                        "type": "const RTM_type *p_v2dt2, RTM_type *p_pi0, RTM_type *p_pi1, RTM_type *p_po0, RTM_type *p_po1, RTM_type *p_ppi0, RTM_type *p_ppi1, RTM_type *p_ppo0, RTM_type *p_ppo1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_coefx",
                        "direction": "",
                        "type": "const RTM_type *p_v2dt2, RTM_type *p_pi0, RTM_type *p_pi1, RTM_type *p_po0, RTM_type *p_po1, RTM_type *p_ppi0, RTM_type *p_ppi1, RTM_type *p_ppo0, RTM_type *p_ppo1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_taperz",
                        "direction": "",
                        "type": "const RTM_type *p_v2dt2, RTM_type *p_pi0, RTM_type *p_pi1, RTM_type *p_po0, RTM_type *p_po1, RTM_type *p_ppi0, RTM_type *p_ppi1, RTM_type *p_ppo0, RTM_type *p_ppo1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_tapery",
                        "direction": "",
                        "type": "const RTM_type *p_v2dt2, RTM_type *p_pi0, RTM_type *p_pi1, RTM_type *p_po0, RTM_type *p_po1, RTM_type *p_ppi0, RTM_type *p_ppi1, RTM_type *p_ppo0, RTM_type *p_ppo1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_taperx",
                        "direction": "",
                        "type": "const RTM_type *p_v2dt2, RTM_type *p_pi0, RTM_type *p_pi1, RTM_type *p_po0, RTM_type *p_po1, RTM_type *p_ppi0, RTM_type *p_ppi1, RTM_type *p_ppo0, RTM_type *p_ppo1, RTM_upbType *p_up"
                    },
                    {
                        "name": "p_v2dt2",
                        "direction": "",
                        "type": "const RTM_type *"
                    },
                    {
                        "name": "p_pi0",
                        "direction": "",
                        "type": "RTM_type *"
                    },
                    {
                        "name": "p_pi1",
                        "direction": "",
                        "type": "RTM_type *"
                    },
                    {
                        "name": "p_po0",
                        "direction": "",
                        "type": "RTM_type *"
                    },
                    {
                        "name": "p_po1",
                        "direction": "",
                        "type": "RTM_type *"
                    },
                    {
                        "name": "p_ppi0",
                        "direction": "",
                        "type": "RTM_type *"
                    },
                    {
                        "name": "p_ppi1",
                        "direction": "",
                        "type": "RTM_type *"
                    },
                    {
                        "name": "p_ppo0",
                        "direction": "",
                        "type": "RTM_type *"
                    },
                    {
                        "name": "p_ppo1",
                        "direction": "",
                        "type": "RTM_type *"
                    },
                    {
                        "name": "p_upb",
                        "direction": "",
                        "type": "RTM_upbType *p_up"
                    }
                ]
            }
        }
    ],
    "target_domain": ""
}
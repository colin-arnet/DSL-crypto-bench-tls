{
    "schema": "vitis_libraries_api_list_schema-1.0",
    "api_list": [
        {
            "api_name": "xf::fintech::binomialTreeEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::binomialTreeEngine",
                "display_name": "binomialTreeEngine",
                "brief": "BinomialTree Engine using CRR (Cox, Ross & Rubinstein)",
                "target_domain": "",
                "header_file_name": [
                    "bt_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "data type supported include float and double"
                    }
                ],
                "ports": [
                    {
                        "name": "inputData",
                        "direction": "",
                        "type": "BinomialTreeInputDataType< DT > *"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::cfB76Engine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::cfB76Engine",
                "display_name": "cfB76Engine",
                "brief": "Single option price plus associated Greeks.",
                "target_domain": "",
                "header_file_name": [
                    "cf_b76.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "Data Type used for this function"
                    }
                ],
                "ports": [
                    {
                        "name": "f",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "v",
                        "direction": "",
                        "type": "DTega,"
                    },
                    {
                        "name": "r",
                        "direction": "",
                        "type": "DT *theta, DT *"
                    },
                    {
                        "name": "t",
                        "direction": "",
                        "type": "h"
                    },
                    {
                        "name": "k",
                        "direction": "",
                        "type": "h"
                    },
                    {
                        "name": "q",
                        "direction": "",
                        "type": "h"
                    },
                    {
                        "name": "call",
                        "direction": "",
                        "type": "h"
                    },
                    {
                        "name": "price",
                        "direction": "",
                        "type": "h"
                    },
                    {
                        "name": "delta",
                        "direction": "",
                        "type": "h"
                    },
                    {
                        "name": "gamma",
                        "direction": "",
                        "type": "h"
                    },
                    {
                        "name": "vega",
                        "direction": "",
                        "type": "h"
                    },
                    {
                        "name": "theta",
                        "direction": "",
                        "type": "h"
                    },
                    {
                        "name": "rho",
                        "direction": "",
                        "type": "h"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::cfBSMEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::cfBSMEngine",
                "display_name": "cfBSMEngine",
                "brief": "Single option price plus associated Greeks.",
                "target_domain": "",
                "header_file_name": [
                    "cf_bsm.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "Data Type used for this function"
                    }
                ],
                "ports": [
                    {
                        "name": "s",
                        "direction": "",
                        "type": "DTigned int call,"
                    },
                    {
                        "name": "v",
                        "direction": "",
                        "type": "DT *price, DT *delta, DT *gamma, DT *ega,"
                    },
                    {
                        "name": "r",
                        "direction": "",
                        "type": "DT *theta, DT *"
                    },
                    {
                        "name": "t",
                        "direction": "",
                        "type": ""
                    },
                    {
                        "name": "k",
                        "direction": "",
                        "type": ""
                    },
                    {
                        "name": "q",
                        "direction": "",
                        "type": ""
                    },
                    {
                        "name": "call",
                        "direction": "",
                        "type": ""
                    },
                    {
                        "name": "price",
                        "direction": "",
                        "type": ""
                    },
                    {
                        "name": "delta",
                        "direction": "",
                        "type": ""
                    },
                    {
                        "name": "gamma",
                        "direction": "",
                        "type": ""
                    },
                    {
                        "name": "vega",
                        "direction": "",
                        "type": ""
                    },
                    {
                        "name": "theta",
                        "direction": "",
                        "type": ""
                    },
                    {
                        "name": "rho",
                        "direction": "",
                        "type": ""
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::FdBsLvSolver",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::FdBsLvSolver",
                "display_name": "FdBsLvSolver",
                "brief": "Entry point to Fd1D Solver.",
                "target_domain": "",
                "header_file_name": [
                    "fd_bs_local_volatility_solver.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "Data Type used for this function"
                    },
                    {
                        "name": "DT_EQ_TYPE",
                        "type": "typename",
                        "description": "Integer data type of same width as DT"
                    },
                    {
                        "name": "N",
                        "type": "unsigned int",
                        "description": "Discretized spatial grid size"
                    },
                    {
                        "name": "M",
                        "type": "unsigned int",
                        "description": "Discretized temporal grid maximum possible size"
                    }
                ],
                "ports": [
                    {
                        "name": "xGrid",
                        "direction": "",
                        "type": "ap_uint< 512 > *"
                    },
                    {
                        "name": "tGrid",
                        "direction": "",
                        "type": "ap_uint< 512 > *"
                    },
                    {
                        "name": "sigma",
                        "direction": "",
                        "type": "ap_uint< 512 > *"
                    },
                    {
                        "name": "rate",
                        "direction": "",
                        "type": "ap_uint< 512 > *"
                    },
                    {
                        "name": "boundary",
                        "direction": "",
                        "type": "ap_uint< 512 > *initialCondition, float theta, DT_upper,"
                    },
                    {
                        "name": "boundary",
                        "direction": "",
                        "type": "unsigned int tSteps, ap_uint< 512 > *solutio"
                    },
                    {
                        "name": "tGrid",
                        "direction": "",
                        "type": "unsigned int tSteps, ap_uint< 512 > *solutio"
                    },
                    {
                        "name": "theta",
                        "direction": "",
                        "type": "unsigned int tSteps, ap_uint< 512 > *solutio"
                    },
                    {
                        "name": "tSteps",
                        "direction": "",
                        "type": "unsigned int"
                    },
                    {
                        "name": "solution",
                        "direction": "",
                        "type": "ap_uint< 512 > *solutio"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::FdDouglas",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::FdDouglas",
                "display_name": "FdDouglas",
                "brief": "Top level callable function to perform the Douglas ADI method.",
                "target_domain": "",
                "header_file_name": [
                    "fd_solver.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "data type supported include float and double"
                    },
                    {
                        "name": "MEM_WIDTH",
                        "type": "unsigned int",
                        "description": "memory width"
                    },
                    {
                        "name": "INDEX_WIDTH",
                        "type": "unsigned int",
                        "description": "index width"
                    },
                    {
                        "name": "A_SIZE",
                        "type": "unsigned int",
                        "description": "sparse matrix value width"
                    },
                    {
                        "name": "M_SIZE",
                        "type": "unsigned int",
                        "description": "sparse matrix row"
                    },
                    {
                        "name": "LOG2_M_SIZE",
                        "type": "unsigned int",
                        "description": "sparse matrix row base 2 logarithm"
                    },
                    {
                        "name": "DIM2_SIZE1",
                        "type": "unsigned int",
                        "description": "tridiagonal matrix column"
                    },
                    {
                        "name": "DIM2_SIZE2",
                        "type": "unsigned int",
                        "description": "pentadiagonal matrix column"
                    }
                ],
                "ports": [
                    {
                        "name": "A",
                        "direction": "",
                        "type": "DT2[M_SIZE][DIM2_SIZE2],"
                    },
                    {
                        "name": "Ar",
                        "direction": "",
                        "type": "DT X1[M_SIZE][DIM2_SIZE1], DT X2[M_SIZE][DIM2_SIZE2], DT b[M_SIZE], DT u0[M_SIZE], unsigned int M1, unsigned int M2, unsigned int N, DT u[M_SIZE"
                    },
                    {
                        "name": "Ac",
                        "direction": "",
                        "type": "DT X1[M_SIZE][DIM2_SIZE1], DT X2[M_SIZE][DIM2_SIZE2], DT b[M_SIZE], DT u0[M_SIZE], unsigned int M1, unsigned int M2, unsigned int N, DT u[M_SIZE"
                    },
                    {
                        "name": "Annz",
                        "direction": "",
                        "type": "DT X1[M_SIZE][DIM2_SIZE1], DT X2[M_SIZE][DIM2_SIZE2], DT b[M_SIZE], DT u0[M_SIZE], unsigned int M1, unsigned int M2, unsigned int N, DT u[M_SIZE"
                    },
                    {
                        "name": "A1",
                        "direction": "",
                        "type": "DT X1[M_SIZE][DIM2_SIZE1], DT X2[M_SIZE][DIM2_SIZE2], DT b[M_SIZE], DT u0[M_SIZE], unsigned int M1, unsigned int M2, unsigned int N, DT u[M_SIZE"
                    },
                    {
                        "name": "A2",
                        "direction": "",
                        "type": "DT X1[M_SIZE][DIM2_SIZE1], DT X2[M_SIZE][DIM2_SIZE2], DT b[M_SIZE], DT u0[M_SIZE], unsigned int M1, unsigned int M2, unsigned int N, DT u[M_SIZE"
                    },
                    {
                        "name": "X1",
                        "direction": "",
                        "type": "DT[M_SIZE][DIM2_SIZE1],"
                    },
                    {
                        "name": "X2",
                        "direction": "",
                        "type": "DT[M_SIZE][DIM2_SIZE2],"
                    },
                    {
                        "name": "b",
                        "direction": "",
                        "type": "DT[M_SIZE],"
                    },
                    {
                        "name": "u0",
                        "direction": "",
                        "type": "DT[M_SIZE],"
                    },
                    {
                        "name": "M1",
                        "direction": "",
                        "type": "unsigned int"
                    },
                    {
                        "name": "M2",
                        "direction": "",
                        "type": "unsigned int"
                    },
                    {
                        "name": "N",
                        "direction": "",
                        "type": "unsigned int"
                    },
                    {
                        "name": "u",
                        "direction": "",
                        "type": "DT"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::hcfEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::hcfEngine",
                "display_name": "hcfEngine",
                "brief": "Engine for Heston Closed Form Solution.",
                "target_domain": "",
                "header_file_name": [
                    "hcf_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "data type supported include float and double"
                    }
                ],
                "ports": [
                    {
                        "name": "input_data",
                        "direction": "",
                        "type": "struct hcfEngineInputDataType< DT > *"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::hjmPcaEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::hjmPcaEngine",
                "display_name": "hjmPcaEngine",
                "brief": "Analyses raw historical data and calculates the input vectors for a Heath-Jarrow-Morton Monte-Carlo simulation.",
                "target_domain": "",
                "header_file_name": [
                    "hjm_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "The internal DataType of the calculations."
                    },
                    {
                        "name": "MAX_TENORS",
                        "type": "unsigned",
                        "description": "Maximum support synthetisable tenors."
                    },
                    {
                        "name": "MAX_CURVES",
                        "type": "unsigned",
                        "description": "Maximum synthetisable number of entries from the historial data."
                    },
                    {
                        "name": "NCU",
                        "type": "unsigned",
                        "description": "Number of parallel component units when processing the historical data matrix."
                    }
                ],
                "ports": [
                    {
                        "name": "ratesIn",
                        "direction": "",
                        "type": "DT[MAX_CURVES *MAX_TENORS],"
                    },
                    {
                        "name": "noTenors",
                        "direction": "",
                        "type": "const unsigned int"
                    },
                    {
                        "name": "noObservations",
                        "direction": "",
                        "type": "const unsigned int"
                    },
                    {
                        "name": "riskNeutralDrift",
                        "direction": "",
                        "type": "DT[MAX_TENORS],"
                    },
                    {
                        "name": "volatilities",
                        "direction": "",
                        "type": "DT[hjmModelParams::N][MAX_TENORS],"
                    },
                    {
                        "name": "presentForwardCurve",
                        "direction": "",
                        "type": "DT"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::hjmMcEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::hjmMcEngine",
                "display_name": "hjmMcEngine",
                "brief": "Prepares and runs a Monte-Carlo simulation and pricing for the Heath-Jarrow-Morton framework.",
                "target_domain": "",
                "header_file_name": [
                    "hjm_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "The internal DataType in the simulation."
                    },
                    {
                        "name": "PT",
                        "type": "class",
                        "description": "The class name for the HJM pricer."
                    },
                    {
                        "name": "MAX_TENORS",
                        "type": "unsigned",
                        "description": "The maximum number of supported tenors in the simulation."
                    },
                    {
                        "name": "UN",
                        "type": "unsigned",
                        "description": "The Unroll Number for the path generators and pricers. It will determine the level of parallelism of the simulation."
                    }
                ],
                "ports": [
                    {
                        "name": "tenors",
                        "direction": "",
                        "type": "const unsigned"
                    },
                    {
                        "name": "simYears",
                        "direction": "",
                        "type": "const float"
                    },
                    {
                        "name": "noPaths",
                        "direction": "",
                        "type": "const unsigned int"
                    },
                    {
                        "name": "presentFc",
                        "direction": "",
                        "type": "DT[MAX_TENORS],"
                    },
                    {
                        "name": "vol",
                        "direction": "",
                        "type": "DT[hjmModelParams::N][MAX_TENORS],"
                    },
                    {
                        "name": "drift",
                        "direction": "",
                        "type": "DT[MAX_TENORS],"
                    },
                    {
                        "name": "pricer",
                        "direction": "",
                        "type": "PT[UN][1],"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 >[UN][hjmModelParams::N],"
                    },
                    {
                        "name": "outputPrice",
                        "direction": "",
                        "type": "hls::stream< DT > &output"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::hjmEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::hjmEngine",
                "display_name": "hjmEngine",
                "brief": "Prepares and runs a Monte-Carlo simulation and pricing for the Heath-Jarrow-Morton framework from historical data. Combines",
                "target_domain": "",
                "header_file_name": [
                    "hjm_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "The internal DataType in the simulation."
                    },
                    {
                        "name": "PT",
                        "type": "class",
                        "description": "The class name for the HJM pricer."
                    },
                    {
                        "name": "MAX_TENORS",
                        "type": "unsigned",
                        "description": "The maximum number of supported tenors in the simulation."
                    },
                    {
                        "name": "MAX_CURVES",
                        "type": "unsigned",
                        "description": "Maximum synthetisable number of entries from the historial data."
                    },
                    {
                        "name": "PCA_NCU",
                        "type": "unsigned",
                        "description": "Number of parallel computing units when implementing the PCA engine."
                    },
                    {
                        "name": "MC_UN",
                        "type": "unsigned",
                        "description": "The Unroll Number for the path generators and pricers. It will determine the level of parallelism of the simulation."
                    }
                ],
                "ports": [
                    {
                        "name": "tenors",
                        "direction": "",
                        "type": "const unsigned"
                    },
                    {
                        "name": "curves",
                        "direction": "",
                        "type": "const unsigned"
                    },
                    {
                        "name": "simYears",
                        "direction": "",
                        "type": "const float"
                    },
                    {
                        "name": "noPaths",
                        "direction": "",
                        "type": "const unsigned"
                    },
                    {
                        "name": "ratesIn",
                        "direction": "",
                        "type": "DT[MAX_CURVES *MAX_TENORS],"
                    },
                    {
                        "name": "pricer",
                        "direction": "",
                        "type": "PT[MC_UN][1],"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 >s[MC_UN][hjmModelParams::N],"
                    },
                    {
                        "name": "outputPrice",
                        "direction": "",
                        "type": "hls::stream< DT > &outPr"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::lmmEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::lmmEngine",
                "display_name": "lmmEngine",
                "brief": "Prepares and runs a Monte-Carlo simulation and pricing for the LIBOR Market Model framework from a given correlation and volatility matrix.",
                "target_domain": "",
                "header_file_name": [
                    "lmm_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "The data type of the internal simulation."
                    },
                    {
                        "name": "PT",
                        "type": "typename",
                        "description": "The class name for the LMM pricer."
                    },
                    {
                        "name": "MAX_TENORS",
                        "type": "unsigned",
                        "description": "noTenors Number of tenors to simulate. It must be <= MAX_TENORS"
                    },
                    {
                        "name": "NF",
                        "type": "unsigned",
                        "description": "Number of factors to use in the internal LMM Monte-Carlo simulation."
                    },
                    {
                        "name": "UN",
                        "type": "unsigned",
                        "description": "Unroll number for path generators and pricers. It will determine the parallelism level of the simulation."
                    },
                    {
                        "name": "PCA_NCU",
                        "type": "unsigned",
                        "description": "Unroll number for the dimensionality reduction of the correlation matrix stage."
                    }
                ],
                "ports": [
                    {
                        "name": "noTenors",
                        "direction": "",
                        "type": "unsigned"
                    },
                    {
                        "name": "noPaths",
                        "direction": "",
                        "type": "unsigned"
                    },
                    {
                        "name": "rho",
                        "direction": "",
                        "type": "hls::stream< DT > &"
                    },
                    {
                        "name": "presentFc",
                        "direction": "",
                        "type": "DT[MAX_TENORS],"
                    },
                    {
                        "name": "sigma",
                        "direction": "",
                        "type": "hls::stream< DT > &"
                    },
                    {
                        "name": "pricer",
                        "direction": "",
                        "type": "PT[UN][1],"
                    },
                    {
                        "name": "seeds",
                        "direction": "",
                        "type": "ap_uint< 32 >[UN],"
                    },
                    {
                        "name": "outputPrice",
                        "direction": "",
                        "type": "DT *outputPr"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::M76Engine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::M76Engine",
                "display_name": "M76Engine",
                "brief": "Engine for the Merton Jump Diffusion Model.",
                "target_domain": "",
                "header_file_name": [
                    "m76_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "data type supported include float and double"
                    }
                ],
                "ports": [
                    {
                        "name": "p",
                        "direction": "",
                        "type": "struct jum"
                    },
                    {
                        "name": "call_price",
                        "direction": "",
                        "type": "rice"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCEuropeanEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCEuropeanEngine",
                "display_name": "MCEuropeanEngine",
                "brief": "European Option Pricing Engine using Monte Carlo Method. This implementation uses Black-Scholes valuation model.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result, default double-precision data type."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel, which affects the latency and resources utilization, default 10."
                    },
                    {
                        "name": "Antithetic",
                        "type": "bool",
                        "description": "antithetic is used for variance reduction, default this feature is disabled."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "volatility",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "output",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int=1024,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int=100,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCEuropeanPriBypassEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCEuropeanPriBypassEngine",
                "display_name": "MCEuropeanPriBypassEngine",
                "brief": "path pricer bypass variant (interface compatible with standard MCEuropeanEngine)",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result, default double-precision data type."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel, which affects the latency and resources utilization, default 10."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "volatility",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "output",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int=1024,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int=100,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCEuropeanHestonEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCEuropeanHestonEngine",
                "display_name": "MCEuropeanHestonEngine",
                "brief": "European Option Pricing Engine using Monte Carlo Method based on Heston valuation model.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float, which decides the precision of output, default double-precision data type."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel, which affects the latency and resources utilization, default 10."
                    },
                    {
                        "name": "discretization",
                        "type": "DiscreType",
                        "description": "DiscreType methods which is used to discrete the stochastic process."
                    },
                    {
                        "name": "Antithetic",
                        "type": "bool",
                        "description": "antithetic is used for variance reduction, default this feature is disabled."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "sigma",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "v0",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "theta",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "kappa",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "rho",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 >[UN][2],"
                    },
                    {
                        "name": "outputs",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int=1024,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int=100,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCMultiAssetEuropeanHestonEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCMultiAssetEuropeanHestonEngine",
                "display_name": "MCMultiAssetEuropeanHestonEngine",
                "brief": "Multiple Asset European Option Pricing Engine using Monte Carlo Method based on Heston valuation model.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float, which decides the precision of output, default double-precision data type."
                    },
                    {
                        "name": "ASSETS",
                        "type": "int",
                        "description": "number of underlying assets supported."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel, which affects the latency and resources utilization, default 10."
                    },
                    {
                        "name": "discretization",
                        "type": "DiscreType",
                        "description": "DiscreType methods which is used to discrete the stochastic process."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT[ASSETS],"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "sigma",
                        "direction": "",
                        "type": "DT[ASSETS],"
                    },
                    {
                        "name": "v0",
                        "direction": "",
                        "type": "DT[ASSETS],"
                    },
                    {
                        "name": "theta",
                        "direction": "",
                        "type": "DT[ASSETS],"
                    },
                    {
                        "name": "kappa",
                        "direction": "",
                        "type": "DT[ASSETS],"
                    },
                    {
                        "name": "corrMatrix",
                        "direction": "",
                        "type": "DT[ASSETS *2+1][ASSETS],"
                    },
                    {
                        "name": "rho",
                        "direction": "",
                        "type": "DT[ASSETS],"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT[ASSETS],"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 >[UN][2],"
                    },
                    {
                        "name": "outputs",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "ap_uint< 32 >=0,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "ap_uint< 32 >=100,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "ap_uint< 32 > maxSampl"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCAmericanEnginePreSamples",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCAmericanEnginePreSamples",
                "display_name": "MCAmericanEnginePreSamples",
                "brief": "American Option Pricing Engine using Monte Carlo Method. PreSample kernel: this kernel samples some amount of path and store them to external memory.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result, default double-precision data type."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel (in path dimension), which affects the latency and resources utilization, default 2."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "volatility",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT riskFreeRate, DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT timeLength, DT strike, bool optionType, ap_uint< 32 > *seed, ap_uint< 8 *sizeof(DT)*UN > *priceOut, ap_uint< 8 *sizeof(DT)> *matOut, unsigned int calibSamples=4096, unsigned int timeSteps=100"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "priceOut",
                        "direction": "",
                        "type": "ap_uint< 8 *sizeof(DT)*UN > *"
                    },
                    {
                        "name": "matOut",
                        "direction": "",
                        "type": "ap_uint< 8 *sizeof(DT)> *"
                    },
                    {
                        "name": "calibSamples",
                        "direction": "",
                        "type": "unsigned int=4096,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCAmericanEngineCalibrate",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCAmericanEngineCalibrate",
                "display_name": "MCAmericanEngineCalibrate",
                "brief": "American Option Pricing Engine using Monte Carlo Method. Calibrate kernel: this kernel reads the sample price data from external memory and use them to calculate the coefficient.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result, default double-precision data type."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel (in path dimension), which affects the latency and resources utilization, default 2. [this unroll number should be equal to UN in MCAmericanEnginePresample]"
                    },
                    {
                        "name": "UN_STEP",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel (in time steps dimension), which affects the latency and resources utilization, default 2. [this Unroll is completely resource bounded, unrelated to other params]"
                    }
                ],
                "ports": [
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "priceIn",
                        "direction": "",
                        "type": "ap_uint< 8 *sizeof(DT)*UN > *"
                    },
                    {
                        "name": "matIn",
                        "direction": "",
                        "type": "ap_uint< 8 *sizeof(DT)> *"
                    },
                    {
                        "name": "coefOut",
                        "direction": "",
                        "type": "ap_uint< 8 *sizeof(DT)*4 > *"
                    },
                    {
                        "name": "calibSamples",
                        "direction": "",
                        "type": "unsigned int=4096,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCAmericanEnginePricing",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCAmericanEnginePricing",
                "display_name": "MCAmericanEnginePricing",
                "brief": "American Option Pricing Engine using Monte Carlo Method. Pricing kernel.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result, default double-precision data type."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel (in path dimension), which affects the latency and resources utilization, default 2. [this unroll number should be equal to UN in MCAmericanEnginePresample]"
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "volatility",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "coefIn",
                        "direction": "",
                        "type": "ap_uint< 8 *sizeof(DT)*4 > *"
                    },
                    {
                        "name": "output",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int=4096,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int=100,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCAmericanEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCAmericanEngine",
                "display_name": "MCAmericanEngine",
                "brief": "American Option Pricing Engine using Monte Carlo Method. calibration process and pricing process all in one kernel.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result, default double-precision data type."
                    },
                    {
                        "name": "UN_PATH",
                        "type": "int",
                        "description": "number of Monte Carlo Module of calibration process in parallel (in path dimension), which affects the latency and resources utilization, default 1."
                    },
                    {
                        "name": "UN_STEP",
                        "type": "int",
                        "description": "number of Monte Carlo Module of calibration process in parallel (in time steps dimension), which affects the latency and resources utilization, default 1."
                    },
                    {
                        "name": "UN_PRICING",
                        "type": "int",
                        "description": "number of Monte Carlo Module of pricing process in parallel (in path dimension), which affects the latency and resources utilization, default 2. Three unroll numbers UN_PATH, UN_STEP and UN_PRICING are independent. Each unroll number affects the execution speed of part of AmericanEngine. On-board test reveals that the pricing phase takes longest time of execution. Therefore, setting larger UN_PRICING benifits most with limited resources."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "volatility",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT riskFreeRate, DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT timeLength, DT strike, bool optionType, ap_uint< 32 > *seed, ap_uint< 8 *sizeof(DT)*UN_PATH > *priceData, ap_uint< 8 *sizeof(DT)> *matData, DT *output, DT requiredTolerance=0.02, unsigned int calibSamples=4096, unsigned int requiredSamples=4096, unsigned int timeSteps=100, unsigned int maxSamples=134217727"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "priceData",
                        "direction": "",
                        "type": "ap_uint< 8 *sizeof(DT)*UN_PATH > *"
                    },
                    {
                        "name": "matData",
                        "direction": "",
                        "type": "ap_uint< 8 *sizeof(DT)> *"
                    },
                    {
                        "name": "output",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int calibSamples=4096, unsigned int=4096,"
                    },
                    {
                        "name": "calibSamples",
                        "direction": "",
                        "type": "unsigned int timeSteps=100, unsigned int maxSamples=1342177"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int=100,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCAsianGeometricAPEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCAsianGeometricAPEngine",
                "display_name": "MCAsianGeometricAPEngine",
                "brief": "Asian Arithmetic Average Price Engine using Monte Carlo Method Based on Black-Scholes Model. The settlement price of the underlying asset at expiry time is the geomertic average of asset price during the option lifetime.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "Supported data type including double and float, which decides the precision of output."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "The number of Monte Carlo Module in parallel, which affects the latency and resources utilization."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "volatility",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "output",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int=1024,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int=100,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCAsianArithmeticAPEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCAsianArithmeticAPEngine",
                "display_name": "MCAsianArithmeticAPEngine",
                "brief": "Asian Arithmetic Average Price Engine using Monte Carlo Method Based on Black-Scholes Model. The settlement price of the underlying asset at expiry time is the arithmetic average of asset price during the option lifetime.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "Supported data type including double and float, which decides the precision of output."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "The number of Monte Carlo Module in parallel, which affects the latency and resources utilization."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "volatility",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "output",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int=1024,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int=100,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCAsianArithmeticASEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCAsianArithmeticASEngine",
                "display_name": "MCAsianArithmeticASEngine",
                "brief": "Asian Arithmetic Average Strike Engine using Monte Carlo Method Based on Black-Scholes Model. The settlement price of the underlying asset at expiry time is the asset price at expiry time, but the stock price is the arithmetic average of asset price during the option lifetime.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "Supported data type including double and float, which decides the precision of output."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "The number of Monte Carlo Module in parallel, which affects the latency and resources utilization."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "volatility",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "output",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int=1024,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int=100,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCBarrierNoBiasEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCBarrierNoBiasEngine",
                "display_name": "MCBarrierNoBiasEngine",
                "brief": "Barrier Option Pricing Engine using Monte Carlo Simulation. Using brownian bridge to generate the non-biased result.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result, default double-precision data type."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel, which affects the latency and resources utilization, default 10."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "volatility",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "barrier",
                        "direction": "",
                        "type": "DTType,"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "bool optionType, ap_uint< 32 > *seed, DT *output, DT rebate=0, DT requiredTolerance=0.02, unsigned int requiredSamples=1024, unsigned int timeSteps=100, unsigned int maxSamples=13421772"
                    },
                    {
                        "name": "barrierType",
                        "direction": "",
                        "type": "bool optionType, ap_uint< 32 > *seed, DT *output, DT rebate=0, DT requiredTolerance=0.02, unsigned int requiredSamples=1024, unsigned int timeSteps=100, unsigned int maxSamples=13421772"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "output",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "rebate",
                        "direction": "",
                        "type": "DT=0,"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int=1024,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int=100,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCBarrierEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCBarrierEngine",
                "display_name": "MCBarrierEngine",
                "brief": "Barrier Option Pricing Engine using Monte Carlo Simulation.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result, default double-precision data type."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel, which affects the latency and resources utilization, default 10."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "volatility",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "barrier",
                        "direction": "",
                        "type": "DTType,"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "bool optionType, ap_uint< 32 > *seed, DT *output, DT rebate=0, DT requiredTolerance=0.02, unsigned int requiredSamples=1024, unsigned int timeSteps=100, unsigned int maxSamples=13421772"
                    },
                    {
                        "name": "barrierType",
                        "direction": "",
                        "type": "bool optionType, ap_uint< 32 > *seed, DT *output, DT rebate=0, DT requiredTolerance=0.02, unsigned int requiredSamples=1024, unsigned int timeSteps=100, unsigned int maxSamples=13421772"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "output",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "rebate",
                        "direction": "",
                        "type": "DT=0,"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int=1024,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int=100,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCCliquetEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCCliquetEngine",
                "display_name": "MCCliquetEngine",
                "brief": "Cliquet Option Pricing Engine using Monte Carlo Simulation. The B-S model used to describe the dynamics of undelying asset.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result, default double-precision data type."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel, which affects the latency and resources utilization, default 10."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "volatility",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "resetDates",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "output",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int timeSteps=100, unsigned int=1024,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int maxSamples=1342177"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCDigitalEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCDigitalEngine",
                "display_name": "MCDigitalEngine",
                "brief": "Digital Option Pricing Engine using Monte Carlo Simulation. The B-S model is used to describe dynamics of undelying asset price.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result, default double-precision data type."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel, which affects the latency and resources utilization, default 10."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "volatility",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "cashPayoff",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "exEarly",
                        "direction": "",
                        "type": "bool optionType, bool"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "ap_uint< 32 > *seed, DT *output, DT requiredTolerance=0.02, unsigned int timeSteps=100, unsigned int requiredSamples=1024, unsigned int maxSamples=134217727"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "output",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int timeSteps=100, unsigned int=1024,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int maxSamples=1342177"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCEuropeanHestonGreeksEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCEuropeanHestonGreeksEngine",
                "display_name": "MCEuropeanHestonGreeksEngine",
                "brief": "European Option Greeks Calculating Engine using Monte Carlo Method based on Heston valuation model.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float, which decides the precision of output, default double-precision data type."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel, which affects the latency and resources utilization, default 10."
                    },
                    {
                        "name": "discretization",
                        "type": "DiscreType",
                        "description": "DiscreType methods which is used to discrete the stochastic process."
                    }
                ],
                "ports": [
                    {
                        "name": "underlying",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "riskFreeRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "sigma",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "v0",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "theta",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "kappa",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "rho",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "dividendYield",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "optionType",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timeLength",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 >[UN][2],"
                    },
                    {
                        "name": "greeks",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int=1024,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int=100,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::MCHullWhiteCapFloorEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::MCHullWhiteCapFloorEngine",
                "display_name": "MCHullWhiteCapFloorEngine",
                "brief": "Cap/Floor Pricing Engine using Monte Carlo Simulation. The Hull-White model is used to describe dynamics of short-term interest. This engine assume a flat term structure.",
                "target_domain": "",
                "header_file_name": [
                    "mc_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result, default double-precision data type."
                    },
                    {
                        "name": "UN",
                        "type": "int",
                        "description": "number of Monte Carlo Module in parallel, which affects the latency and resources utilization, default 10."
                    }
                ],
                "ports": [
                    {
                        "name": "nomial",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "initRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "strike",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "isCap",
                        "direction": "",
                        "type": "bool"
                    },
                    {
                        "name": "singlePeriod",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "alpha",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "sigma",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "seed",
                        "direction": "",
                        "type": "ap_uint< 32 > *"
                    },
                    {
                        "name": "output",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "requiredTolerance",
                        "direction": "",
                        "type": "DT=0.02,"
                    },
                    {
                        "name": "requiredSamples",
                        "direction": "",
                        "type": "unsigned int=0,"
                    },
                    {
                        "name": "timeSteps",
                        "direction": "",
                        "type": "unsigned int=2,"
                    },
                    {
                        "name": "maxSamples",
                        "direction": "",
                        "type": "unsigned int"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::McmcCore",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::McmcCore",
                "display_name": "McmcCore",
                "brief": "Top level Kernel function. Consists of INIT_LOOP and main sample loop: SAMPLES_LOOP",
                "target_domain": "",
                "header_file_name": [
                    "pop_mcmc.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "- Data type used in whole function (double by default)"
                    },
                    {
                        "name": "NCHAINS",
                        "type": "unsigned int",
                        "description": "- Number of chains"
                    },
                    {
                        "name": "NSAMPLES_MAX",
                        "type": "unsigned int",
                        "description": "- Maximum Number of chains for synthesis purpose"
                    }
                ],
                "ports": [
                    {
                        "name": "temp_inv",
                        "direction": "",
                        "type": "DT[NCHAINS],"
                    },
                    {
                        "name": "sigma",
                        "direction": "",
                        "type": "DT[NCHAINS],"
                    },
                    {
                        "name": "nSamples",
                        "direction": "",
                        "type": "DT x[NSAMPLES_MAX], unsigned int nSampl"
                    },
                    {
                        "name": "x",
                        "direction": "",
                        "type": "DT[NSAMPLES_MAX],"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::treeSwaptionEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::treeSwaptionEngine",
                "display_name": "treeSwaptionEngine",
                "brief": "Tree Swaption Pricing Engine using Trinomial Tree based 1D Lattice method.",
                "target_domain": "",
                "header_file_name": [
                    "tree_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result."
                    },
                    {
                        "name": "Model",
                        "type": "typename",
                        "description": "short-rate model class"
                    },
                    {
                        "name": "Process",
                        "type": "typename",
                        "description": "stochastic process class"
                    },
                    {
                        "name": "DIM",
                        "type": "int",
                        "description": "1D or 2D short-rate model"
                    },
                    {
                        "name": "LEN",
                        "type": "int",
                        "description": "maximum length of timestep, which affects the latency and resources utilization."
                    },
                    {
                        "name": "LEN2",
                        "type": "int",
                        "description": "maximum length of node of tree, which affects the latency and resources utilization."
                    }
                ],
                "ports": [
                    {
                        "name": "model",
                        "direction": "",
                        "type": "Model &"
                    },
                    {
                        "name": "process",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "type",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "fixedRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timestep",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "initTime",
                        "direction": "",
                        "type": "DT[LEN],"
                    },
                    {
                        "name": "initSize",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "exerciseCnt",
                        "direction": "",
                        "type": "int *"
                    },
                    {
                        "name": "floatingCnt",
                        "direction": "",
                        "type": "int *"
                    },
                    {
                        "name": "fixedCnt",
                        "direction": "",
                        "type": "int *"
                    },
                    {
                        "name": "flatRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "nominal",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "x0",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "spread",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "NPV",
                        "direction": "",
                        "type": "DT *NP"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::treeSwapEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::treeSwapEngine",
                "display_name": "treeSwapEngine",
                "brief": "Tree Swap Pricing Engine using Trinomial Tree based 1D Lattice method.",
                "target_domain": "",
                "header_file_name": [
                    "tree_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result."
                    },
                    {
                        "name": "Model",
                        "type": "typename",
                        "description": "short-rate model"
                    },
                    {
                        "name": "Process",
                        "type": "typename",
                        "description": "stochastic process"
                    },
                    {
                        "name": "DIM",
                        "type": "int",
                        "description": "1D or 2D short-rate model"
                    },
                    {
                        "name": "LEN",
                        "type": "int",
                        "description": "maximum length of timestep, which affects the latency and resources utilization."
                    },
                    {
                        "name": "LEN2",
                        "type": "int",
                        "description": "maximum length of node of tree, which affects the latency and resources utilization."
                    }
                ],
                "ports": [
                    {
                        "name": "model",
                        "direction": "",
                        "type": "Model &"
                    },
                    {
                        "name": "process",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "type",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "fixedRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timestep",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "initTime",
                        "direction": "",
                        "type": "DT[LEN],"
                    },
                    {
                        "name": "initSize",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "floatingCnt",
                        "direction": "",
                        "type": "int *"
                    },
                    {
                        "name": "fixedCnt",
                        "direction": "",
                        "type": "int *"
                    },
                    {
                        "name": "flatRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "nominal",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "x0",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "spread",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "NPV",
                        "direction": "",
                        "type": "DT *NP"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::treeCapFloorEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::treeCapFloorEngine",
                "display_name": "treeCapFloorEngine",
                "brief": "Tree CapFloor Pricing Engine using Trinomial Tree based 1D Lattice method.",
                "target_domain": "",
                "header_file_name": [
                    "tree_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result."
                    },
                    {
                        "name": "Model",
                        "type": "typename",
                        "description": "short-rate model that has been initialized"
                    },
                    {
                        "name": "Process",
                        "type": "typename",
                        "description": "parameters of stochastic process"
                    },
                    {
                        "name": "DIM",
                        "type": "int",
                        "description": "1D or 2D short-rate model"
                    },
                    {
                        "name": "LEN",
                        "type": "int",
                        "description": "maximum length of timestep, which affects the latency and resources utilization."
                    },
                    {
                        "name": "LEN2",
                        "type": "int",
                        "description": "maximum length of node of tree, which affects the latency and resources utilization."
                    }
                ],
                "ports": [
                    {
                        "name": "model",
                        "direction": "",
                        "type": "Model &"
                    },
                    {
                        "name": "process",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "type",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "fixedRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timestep",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "initTime",
                        "direction": "",
                        "type": "DT[LEN],"
                    },
                    {
                        "name": "initSize",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "floatingCnt",
                        "direction": "",
                        "type": "int *"
                    },
                    {
                        "name": "flatRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "nominal",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "cfRate",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "x0",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "spread",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "NPV",
                        "direction": "",
                        "type": "DT *NP"
                    }
                ]
            }
        },
        {
            "api_name": "xf::fintech::treeCallableEngine",
            "spec": {
                "schema": "vitis_libraries_api_list_schema-1.0",
                "api_name": "xf::fintech::treeCallableEngine",
                "display_name": "treeCallableEngine",
                "brief": "Tree Callable Fixed Rate Bond Pricing Engine using Trinomial Tree based 1D Lattice method.",
                "target_domain": "",
                "header_file_name": [
                    "tree_engine.hpp"
                ],
                "search_paths": [
                    "L2/include/xf_fintech"
                ],
                "instance": "function",
                "parameters": [
                    {
                        "name": "DT",
                        "type": "typename",
                        "description": "supported data type including double and float data type, which decides the precision of result."
                    },
                    {
                        "name": "Model",
                        "type": "typename",
                        "description": "short-rate model"
                    },
                    {
                        "name": "Process",
                        "type": "typename",
                        "description": "stochastic process"
                    },
                    {
                        "name": "DIM",
                        "type": "int",
                        "description": "1D or 2D short-rate model"
                    },
                    {
                        "name": "LEN",
                        "type": "int",
                        "description": "maximum length of timestep, which affects the latency and resources utilization."
                    },
                    {
                        "name": "LEN2",
                        "type": "int",
                        "description": "maximum length of node of tree, which affects the latency and resources utilization."
                    }
                ],
                "ports": [
                    {
                        "name": "model",
                        "direction": "",
                        "type": "Model &"
                    },
                    {
                        "name": "process",
                        "direction": "",
                        "type": "DT *"
                    },
                    {
                        "name": "type",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "fixedRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "timestep",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "initTime",
                        "direction": "",
                        "type": "DT[LEN],"
                    },
                    {
                        "name": "initSize",
                        "direction": "",
                        "type": "int"
                    },
                    {
                        "name": "callableCnt",
                        "direction": "",
                        "type": "int *"
                    },
                    {
                        "name": "paymentCnt",
                        "direction": "",
                        "type": "int *"
                    },
                    {
                        "name": "flatRate",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "nominal",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "x0",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "spread",
                        "direction": "",
                        "type": "DT"
                    },
                    {
                        "name": "NPV",
                        "direction": "",
                        "type": "DT *NP"
                    }
                ]
            }
        }
    ],
    "target_domain": ""
}
